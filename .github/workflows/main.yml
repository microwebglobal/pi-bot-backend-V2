name: Build and Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: true
        command_timeout: 30m  
        script: |
          # Create backup directory with timestamp
          BACKUP_DIR="/var/www/backup/$(date +%Y%m%d_%H%M%S)"
          mkdir -p $BACKUP_DIR
          
          # Backup current application (excluding venv and logs)
          if [ -d "/var/www/chatbotgeneral" ]; then
            # Preserve the virtual environment
            if [ -d "/var/www/chatbotgeneral/venv" ]; then
              mv /var/www/chatbotgeneral/venv /tmp/venv_backup
            fi
            # Backup other files
            find /var/www/chatbotgeneral -mindepth 1 -not -name 'venv' -not -name '*.log' -exec cp -r {} $BACKUP_DIR/ \; 2>/dev/null || true
          fi
          
          # Clean application directory but keep venv
          find /var/www/chatbotgeneral -mindepth 1 -not -name 'venv' -not -name '*.log' -delete 2>/dev/null || true
          mkdir -p /var/www/chatbotgeneral
    
    - name: Copy application files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "."
        target: "/var/www/chatbotgeneral/"
        rm: false
        strip_components: 0
        exclude: |
          .git
          .github
          __pycache__
          *.pyc
          *.pyo
          *.log
          venv
    
    - name: Install dependencies and start application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: true
        command_timeout: 30m  
        script: |
          cd /var/www/chatbotgeneral
          
          # Restore or create virtual environment
          if [ -d "/tmp/venv_backup" ]; then
            mv /tmp/venv_backup venv
            # Upgrade pip in existing venv
            source venv/bin/activate
            python -m pip install --upgrade pip
          else
            # Create new virtual environment
            python3 -m venv venv
            source venv/bin/activate
            python -m pip install --upgrade pip
          fi
          
          # Install dependencies with optimizations
          source venv/bin/activate
          # Use pip-tools or a cache to speed up installations
          pip install -r requirements.txt --no-cache-dir
          
          # Stop current application
          pkill -f "uvicorn app.main:app" || true
          sleep 3
          
          # Start new application
          nohup uvicorn app.main:app --host 0.0.0.0 --port 8090 --workers 1 > app.log 2>&1 &
          
          # Verify deployment
          sleep 5
          if pgrep -f "uvicorn app.main:app"; then
            echo "✅ Deployment successful!"
            echo "Application is running on port 8090"
            # Test the app
            curl -s http://localhost:8090 || echo "App started but not responding yet"
          else
            echo "❌ Deployment failed!"
            echo "Logs:"
            tail -50 app.log
            exit 1
          fi
          
          # Keep only last 5 backups
          ls -t /var/www/backup/ | tail -n +6 | xargs -r -I {} rm -rf /var/www/backup/{}
